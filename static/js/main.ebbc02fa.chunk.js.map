{"version":3,"sources":["history.ts","actions/theme.ts","utils/theme.ts","reducers/theme.ts","reducers/index.ts","sagas/index.ts","store.ts","components/Typography/index.tsx","containers/Main/index.tsx","components/LightsOff/index.tsx","components/PageWrapper/index.tsx","theme/colors.ts","theme/grid.ts","theme/transitions.ts","theme/decorations.ts","theme/helpers.ts","theme/typography.ts","theme/index.ts","styles/bootstrap.tsx","App.tsx","index.tsx"],"names":["history","createBrowserHistory","theme","setMode","MODE_DARK","MODE_LIGHT","isDarkMode","mode","initialState","window","matchMedia","matches","state","type","data","rootSaga","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","action","combineReducers","reducers","router","connectRouter","applyMiddleware","routerMiddleware","run","acceptedStyleProps","BaseStyledType","styled","div","color","props","Object","keys","map","key","includes","replace","toLowerCase","join","TypeWithContext","children","useContext","ThemeContext","typography","tag","mergedProps","Type","withComponent","Canon","Main","ID","Checkbox","input","Label","label","decorations","shadows","default","helpers","setDimensions","LightsOff","onClick","checked","defaultChecked","id","htmlFor","title","role","Decorator","main","PageWrapper","getColorObject","light","dark","background","100","90","grayscale","0","10","60","70","80","blue","50","red","columns","xs","sm","md","lg","xl","gutterWidth","paddingWidth","container","breakpoints","toAnimate","duration","item","width","height","toRem","pxValue","fontFamily","fontSize","fontWeight","lineHeight","Trafalgar","Paragon","DoublePica","GreatPrimer","BodyCopy","Brevier","name","tint","colors","awesomegrid","transitions","GlobalStyles","createGlobalStyle","StylesBootstrap","useSelector","App","dispatch","useDispatch","path","component","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ebbc02fa.chunk.js","sourcesContent":["//@ts-ignore \nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","export const theme = {\n    setMode: 'THEME_SET_MODE'\n}\n\nexport function setMode() {\n    return {\n        type: theme.setMode\n    };\n}","export const MODE_DARK = 'dark';\nexport const MODE_LIGHT = 'light';\n\nexport const userPreferredMode = () => window.matchMedia('(prefers-color-scheme: dark)').matches ? MODE_DARK : MODE_LIGHT;\n\nexport const isDarkMode = (mode: string) => mode === MODE_DARK;\n","import { theme } from '../actions/theme';\nimport {\n    userPreferredMode,\n    isDarkMode,\n    MODE_DARK,\n    MODE_LIGHT\n} from '../utils/theme';\n\nconst initialState = {\n    mode: userPreferredMode()\n};\n\n\nexport default function themeReducer(state: any, { type, data }: { type: string, data: any }) {\n    if (typeof state === 'undefined') {\n        return initialState;\n    }\n\n    switch (type) {\n        case theme.setMode:\n            return {\n                ...state,\n                mode: isDarkMode(state.mode) ? MODE_LIGHT : MODE_DARK,\n            };\n        default:\n            return state;\n    }\n}\n","import theme from './theme';\n\nexport type stateProps = {\n    theme: {\n        mode: string\n    }\n} \n\nexport default {\n    theme\n}","export default function* rootSaga() {}","\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport history from './history';\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = (state: any, action: any) => combineReducers({\n    ...reducers,\n    router: connectRouter(history),\n})(state, action);\n\nexport default createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n","import React, { FC, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport styled from 'styled-components';\n\nconst acceptedStyleProps = [\n    'fontFamily',\n    'fontSize',\n    'fontWeight',\n    'lineHeight',\n    'color'\n]\n\nconst BaseStyledType = styled.div`\n    color: ${({ theme }) => theme.color('grayscale', 100)};\n    ${props => {\n        return Object.keys(props).map(key => {\n            if (!acceptedStyleProps.includes(key)) return '';\n            //@ts-ignore\n            return `${key.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase()}: ${props[key]};`\n        }).join('');\n    }\n    }\n`;\n\nconst TypeWithContext: FC<{ type: string }> = ({ children, type, ...props }) => {\n    const { typography }: any = useContext(ThemeContext);\n\n    const {\n        tag,\n        ...mergedProps\n    }: any = {\n        ...typography[type],\n        ...props,\n    };\n\n    const Type = BaseStyledType.withComponent(tag);\n\n    return (\n        <Type {...mergedProps}\n        >\n            {children}\n        </Type>\n    );\n}\n\nexport const Canon: FC<any> = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type={'Canon'}\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const Trafalgar: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"Trafalgar\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const Paragon: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"Paragon\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const DoublePice: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"DoublePice\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const GreatPrimer: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"GreatPrimer\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const BodyCopy: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"BodyCopy\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const Brevier: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"Brevier\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\n\n","import React, { FC } from 'react';\nimport { Canon } from '../../components/Typography';\n\nconst Main: FC = () => {\n    return (\n        <Canon>\n            Hello World\n        </Canon>\n    );\n};\n\nexport default Main;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ID = 'LightsOff';\n\nconst Checkbox = styled.input`\n    display: none;\n`;\n\nconst Label = styled.label`\n    user-select: none;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.2rem;\n    position: absolute;\n    right: 1rem;\n    bottom: 1rem;\n    background: ${({ theme }) => theme.color('background', 90)};\n    box-shadow: ${({ theme }) => theme.decorations.shadows.default};\n    border-radius: .2rem;\n    font-size: 1rem;\n\n    ${({ theme }) => theme.helpers.setDimensions('2.2rem')}\n`;\n\nexport const LightsOff = ({ onClick, checked }: { onClick?: () => void; checked?: boolean; }) => (\n    <>\n        <Checkbox\n            type=\"checkbox\"\n            defaultChecked={checked}\n            id={ID}\n        />\n        <Label onClick={onClick} htmlFor={ID} title=\"Activate light mode\">\n            <span role=\"img\">\n                {!checked ? '🌙' : '☀️'}\n            </span>\n        </Label>\n    </>\n);","import React, { FC } from 'react';\nimport { Container } from 'react-awesome-styled-grid';\nimport styled from 'styled-components';\n\nconst Decorator = styled.main`\n  background: ${({ theme }) => theme.color('background', 90)};\n  box-shadow: ${({ theme }) => theme.decorations.shadows.default};\n  margin: 4rem auto;\n  padding: 5rem 2rem;\n`;\n\nconst PageWrapper: FC = ({ children }) => (\n    <Container>\n        <Decorator>\n            {children}\n        </Decorator>\n    </Container>\n);\n\nexport default PageWrapper;","const getColorObject = (light: {}, dark: {} = light) => ({ light, dark });\n\nexport default {\n    background: getColorObject(\n        {\n            100: '#F2F3F4',\n            90: '#fff'\n        },\n        {\n            100: '#000',\n            90: '#202326'\n        }\n    ),\n    grayscale: getColorObject(\n        {\n            0: '#fff',\n            10: '#D6D7D7',\n            60: '#595D5F',\n            70: '#9B9E9F',\n            80: '#595D5F',\n            90: '#222222',\n            100: '#000'\n        },\n        {\n            100: '#fff',\n            90: '#D6D7D7',\n            80: '#595D5F',\n            70: '#9B9E9F',\n            60: '#595D5F',\n            10: '#222222',\n            0: '#000'\n        }\n    ),\n    blue: getColorObject({\n        100: '#0D74FF',\n        50: '#D9E7FD'\n    }),\n    red: getColorObject({\n        100: '#F74237',\n        50: '#FFEBF4'\n    })\n};","export default {\n    columns: {\n        xs: 4,\n        sm: 8,\n        md: 8,\n        lg: 12,\n        xl: 12,\n    },\n    gutterWidth: {\n        xs: 1,\n        sm: 1,\n        md: 1.5,\n        lg: 1.5,\n        xl: 1.5,\n    },\n    paddingWidth: {\n        xs: 1,\n        sm: 1,\n        md: 1.5,\n        lg: 1.5,\n        xl: 1.5,\n    },\n    container: {\n        xs: 'full', // 'full' = max-width: 100%\n        sm: 'full', // 'full' = max-width: 100%\n        md: 'full', // 'full' = max-width: 100%\n        lg: 60, // max-width: 1440px\n        xl: 60, // max-width: 1440px\n    },\n    breakpoints: {\n        xs: 1,\n        sm: 43, // 688px\n        md: 60, // 960px\n        lg: 90, // 1440px\n        xl: 120, // 1920px\n    },\n}","export default {\n    default: (toAnimate: Array<string>, duration: string = '.2s'): string => toAnimate.map(item => `${item} ${duration} cubic-bezier(0.25, 0.46, 0.45, 0.94)`).join(',')\n}","export default {\n    shadows: {\n        default: 'rgba(84, 70, 35, 0.15) 0px 2px 8px, rgba(84, 70, 35, 0.15) 0px 1px 3px'\n    }\n}","export const setDimensions = (width: string, height: string = width) => `\n    width: ${width};\n    height: ${height};\n`;\n\nexport const toRem = (pxValue: number): string | undefined => `${pxValue / 16}rem`;\n","import { toRem } from './helpers';\nconst fontFamily = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, 'Apple Color Emoji', Arial, sans-serif, 'Segoe UI Emoji', 'Segoe UI Symbol'\";\n\nexport default {\n    // http://www.bbc.co.uk/gel/guidelines/typography\n    Canon: {\n        tag: 'h1',\n        fontSize: toRem(52),\n        fontWeight: 800,\n        lineHeight: toRem(56),\n        fontFamily,\n    },\n    Trafalgar: {\n        tag: 'h1',\n        fontSize: toRem(36),\n        fontWeight: 600,\n        lineHeight: toRem(40),\n        fontFamily,\n    },\n    Paragon: {\n        tag: 'h2',\n        fontSize: toRem(28),\n        fontWeight: 500,\n        lineHeight: toRem(32),\n        fontFamily,\n    },\n    DoublePica: {\n        tag: 'h3',\n        fontSize: toRem(26),\n        fontWeight: 500,\n        lineHeight: toRem(30),\n        fontFamily,\n    },\n    GreatPrimer: {\n        tag: 'h4',\n        fontSize: toRem(21),\n        fontWeight: 500,\n        lineHeight: toRem(24),\n        fontFamily,\n    },\n    BodyCopy: {\n        tag: 'p',\n        fontSize: toRem(16),\n        fontWeight: 400,\n        lineHeight: toRem(22),\n        fontFamily,\n    },\n    Brevier: {\n        tag: 'p',\n        fontSize: toRem(14),\n        fontWeight: 400,\n        lineHeight: toRem(18),\n        fontFamily,\n    }\n}","import colors from './colors';\nimport awesomegrid from './grid';\nimport transitions from './transitions';\nimport decorations from './decorations';\nimport typography from './typography';\nimport * as helpers from './helpers';\n\nexport default (mode: string = 'dark') => ({\n    //@ts-ignore\n    color: (name: string, tint: number = 100): string | undefined => colors[name][mode][tint],\n    awesomegrid,\n    helpers,\n    transitions,\n    decorations,\n    typography\n});","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { Reset } from 'styled-reset';\nimport theme from '../theme';\nimport { stateProps } from '../reducers';\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    font-size: 16px;\n  }\n  \n  body {\n    background: ${({ theme }) => theme.color('background')};\n    display: flex;\n    min-height: 100vh;\n    flex-direction: column;\n  }\n\n  #root {\n    flex: 1;\n  }\n`;\n\nconst StylesBootstrap: FC = ({ children }) => {\n  const mode = useSelector(({ theme }: stateProps) => theme.mode);\n\n  return (\n    <ThemeProvider theme={theme(mode)}>\n      <>\n        <Reset />\n        <GlobalStyles />\n        {children}\n      </>\n    </ThemeProvider>\n  )\n};\n\nexport default StylesBootstrap;","import React, { FC } from 'react';\nimport { Route, Switch } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-awesome-styled-grid';\nimport { stateProps } from './reducers';\nimport { isDarkMode } from './utils/theme';\nimport { setMode } from './actions/theme';\nimport Main from './containers/Main';\nimport { LightsOff } from './components/LightsOff';\nimport PageWrapper from './components/PageWrapper';\nimport StylesBootstrap from './styles/bootstrap';\n\nconst App: FC = () => {\n  /* \n    TODO: Create navigation container and move this there\n  */\n  const mode = useSelector(({ theme }: stateProps) => theme.mode);\n  const dispatch = useDispatch();\n\n  return (\n    <StylesBootstrap>\n      {/* TEMP */}\n      <Container>\n        <LightsOff\n          checked={isDarkMode(mode)}\n          onClick={() => dispatch(setMode())}\n        />\n      </Container>\n      {/* END TEMP */}\n      <PageWrapper>\n        <Switch>\n          <Route path=\"/\" component={Main} />\n        </Switch>\n      </PageWrapper>\n    </StylesBootstrap>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router'\nimport history from './history';\nimport store from './store';\nimport App from './App';\n\nrender(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Route path=\"/\" component={App} />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}