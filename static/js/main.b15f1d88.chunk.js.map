{"version":3,"sources":["history.ts","actions/theme.ts","utils/theme.ts","reducers/theme.ts","reducers/index.ts","sagas/index.ts","store.ts","containers/Main/index.tsx","components/LightsOff/index.tsx","components/PageWrapper/index.tsx","theme/colors.ts","theme/grid.ts","theme/index.ts","styles/bootstrap.tsx","App.tsx","index.tsx"],"names":["history","createBrowserHistory","theme","setMode","MODE_DARK","MODE_LIGHT","isDarkMode","mode","initialState","window","matchMedia","matches","state","type","data","rootSaga","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","action","combineReducers","reducers","router","connectRouter","applyMiddleware","routerMiddleware","run","Main","ID","Checkbox","styled","input","Label","label","setDimensions","LightsOff","onClick","checked","defaultChecked","id","htmlFor","role","Decorator","main","color","PageWrapper","children","getColorObject","light","dark","background","100","90","grayscale","0","10","60","70","80","blue","50","red","columns","xs","sm","md","lg","xl","gutterWidth","paddingWidth","container","breakpoints","colors","name","tint","width","height","typography","font","sizes","bodySize","headingLineHeight","bodyLineHeight","awesomegrid","GlobalStyles","createGlobalStyle","StylesBootstrap","useSelector","App","dispatch","useDispatch","path","component","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b15f1d88.chunk.js","sourcesContent":["//@ts-ignore \nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","export const theme = {\n    setMode: 'THEME_SET_MODE'\n}\n\nexport function setMode() {\n    return {\n        type: theme.setMode\n    };\n}","export const MODE_DARK = 'dark';\nexport const MODE_LIGHT = 'light';\n\nexport const userPreferredMode = () => window.matchMedia('(prefers-color-scheme: dark)').matches ? MODE_DARK : MODE_LIGHT;\n \nexport const isDarkMode = (mode: string) => mode === MODE_DARK;","import { theme } from '../actions/theme';\nimport {\n    userPreferredMode,\n    isDarkMode,\n    MODE_DARK,\n    MODE_LIGHT\n} from '../utils/theme';\n\nconst initialState = {\n    mode: userPreferredMode()\n};\n\n\nexport default function themeReducer(state: any, { type, data }: { type: string, data: any }) {\n    if (typeof state === 'undefined') {\n        return initialState;\n    }\n\n    switch (type) {\n        case theme.setMode:\n            return {\n                ...state,\n                mode: isDarkMode(state.mode) ? MODE_LIGHT : MODE_DARK,\n            };\n        default:\n            return state;\n    }\n}\n","import theme from './theme';\n\nexport type stateProps = {\n    theme: {\n        mode: string\n    }\n} \n\nexport default {\n    theme\n}","export default function* rootSaga() {}","\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport history from './history';\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = (state: any, action: any) => combineReducers({\n    ...reducers,\n    router: connectRouter(history),\n})(state, action);\n\nexport default createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n","import React, { FC } from 'react';\n\nconst Main: FC = () => {\n    return (\n        <h1>\n        </h1>\n    );\n};\n\nexport default Main;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ID = 'LightsOff';\n\nconst Checkbox = styled.input`\n    display: none;\n\n    &:checked + [for=\"${ID}\"] {\n    }\n`;\n\nconst Label = styled.label`\n    user-select: none;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.2rem;\n\n    ${({ theme }) => theme.setDimensions('3rem')}\n`;\n\nexport const LightsOff = ({ onClick, checked }: { onClick?: () => void; checked?: boolean; }) => (\n    <>\n        <Checkbox\n            type=\"checkbox\"\n            defaultChecked={checked}\n            id={ID}\n        />\n        <Label onClick={onClick} htmlFor={ID}>\n            <span role=\"img\">\n                {!checked ? '🌙' : '☀️'}\n            </span>\n        </Label>\n    </>\n);","import React, { FC } from 'react';\nimport { Container } from 'react-awesome-styled-grid';\nimport styled from 'styled-components';\n\nconst Decorator = styled.main`\n  background: ${({ theme }) => theme.color('background', 90)};\n  margin: 4rem auto;\n  padding: 5rem 2rem;\n  box-shadow: 0 30px 90px 0 rgba(31,36,48,.1);\n`;\n\nconst PageWrapper: FC = ({ children }) => (\n    <Container>\n        <Decorator>\n            {children}\n        </Decorator>\n    </Container>\n);\n\nexport default PageWrapper;","const getColorObject = (light: {}, dark: {} = light) => ({ light, dark });\n\nexport default {\n    background: getColorObject(\n        {\n            100: '#F2F3F4',\n            90: '#fff'\n        },\n        {\n            100: '#0D0D0D',\n            90: '#191919'\n        }\n    ),\n    grayscale: getColorObject(\n        {\n            0: '#fff',\n            10: '#D6D7D7',\n            60: '#595D5F',\n            70: '#9B9E9F',\n            80: '#595D5F',\n            90: '#222222',\n            100: '#000'\n        },\n        {\n            100: '#fff',\n            90: '#D6D7D7',\n            80: '#595D5F',\n            70: '#9B9E9F',\n            60: '#595D5F',\n            10: '#222222',\n            0: '#000'\n        }\n    ),\n    blue: getColorObject({\n        100: '#0D74FF',\n        50: '#D9E7FD'\n    }),\n    red: getColorObject({\n        100: '#F74237',\n        50: '#FFEBF4'\n    })\n};","export default {\n    columns: {\n        xs: 4,\n        sm: 8,\n        md: 8,\n        lg: 12,\n        xl: 12,\n    },\n    gutterWidth: {\n        xs: 1,\n        sm: 1,\n        md: 1.5,\n        lg: 1.5,\n        xl: 1.5,\n    },\n    paddingWidth: {\n        xs: 1,\n        sm: 1,\n        md: 1.5,\n        lg: 1.5,\n        xl: 1.5,\n    },\n    container: {\n        xs: 'full', // 'full' = max-width: 100%\n        sm: 'full', // 'full' = max-width: 100%\n        md: 'full', // 'full' = max-width: 100%\n        lg: 60, // max-width: 1440px\n        xl: 60, // max-width: 1440px\n    },\n    breakpoints: {\n        xs: 1,\n        sm: 43, // 688px\n        md: 60, // 960px\n        lg: 90, // 1440px\n        xl: 120, // 1920px\n    },\n}","import colors from './colors';\nimport awesomegrid from './grid';\n\nexport default (mode: string = 'dark') => {\n    return {\n        colors,\n        //@ts-ignore\n        color: (name: string, tint: number = 100): string | undefined => colors[name][mode][tint],\n        setDimensions: (width: string, height: string = width) => `\n            width: ${width};\n            height: ${height};\n        `,\n        typography: {\n            font: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, 'Apple Color Emoji', Arial, sans-serif, 'Segoe UI Emoji', 'Segoe UI Symbol'\",\n            sizes: [\n                '2.5rem',\n                '2rem',\n                '1.5rem',\n                '1.25rem',\n                '1.125rem',\n                '0.875rem'\n            ],\n            bodySize: '1rem',\n            headingLineHeight: 1,\n            bodyLineHeight: 1.2\n        },\n        awesomegrid\n    }\n};","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { Reset } from 'styled-reset';\nimport theme from '../theme';\nimport { stateProps } from '../reducers';\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    font-size: 16px;\n  }\n  \n  body {\n    background: ${({ theme }) => theme.color('background')};\n    display: flex;\n    min-height: 100vh;\n    flex-direction: column;\n  }\n\n  #root {\n    flex: 1;\n  }\n`;\n\nconst StylesBootstrap: FC = ({ children }) => {\n  const mode = useSelector(({ theme }: stateProps) => theme.mode);\n\n  return (\n    <ThemeProvider theme={theme(mode)}>\n      <>\n        <Reset />\n        <GlobalStyles />\n        {children}\n      </>\n    </ThemeProvider>\n  )\n};\n\nexport default StylesBootstrap;","import React, { FC } from 'react';\nimport { Route, Switch } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-awesome-styled-grid';\nimport { stateProps } from './reducers';\nimport { isDarkMode } from './utils/theme';\nimport { setMode } from './actions/theme';\nimport Main from './containers/Main';\nimport { LightsOff } from './components/LightsOff';\nimport PageWrapper from './components/PageWrapper';\nimport StylesBootstrap from './styles/bootstrap';\n\nconst App: FC = () => {\n  /* \n    TODO: Create navigation container and move this there\n  */\n  const mode = useSelector(({ theme }: stateProps) => theme.mode);\n  const dispatch = useDispatch();\n\n  return (\n    <StylesBootstrap>\n      {/* TEMP */}\n      <Container>\n        <LightsOff\n          checked={isDarkMode(mode)}\n          onClick={() => dispatch(setMode())}\n        />\n      </Container>\n      {/* END TEMP */}\n      <PageWrapper>\n        <Switch>\n          <Route path=\"/\" component={Main} />\n        </Switch>\n      </PageWrapper>\n    </StylesBootstrap>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router'\nimport history from './history';\nimport store from './store';\nimport App from './App';\n\nrender(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Route path=\"/\" component={App} />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}