{"version":3,"sources":["history.ts","actions/theme.ts","utils/theme.ts","reducers/theme.ts","reducers/index.ts","sagas/index.ts","store.ts","components/PageWrapper/index.tsx","components/Hero/index.tsx","components/Typography/index.tsx","containers/Main/index.tsx","theme/colors.ts","theme/grid.ts","theme/transitions.ts","theme/decorations.ts","theme/helpers.ts","theme/typography.ts","theme/breakpoints.ts","theme/index.ts","styles/bootstrap.tsx","App.tsx","index.tsx"],"names":["history","createBrowserHistory","theme","setMode","MODE_DARK","MODE_LIGHT","isDarkMode","mode","initialState","window","matchMedia","matches","state","type","data","rootSaga","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","action","combineReducers","reducers","router","connectRouter","applyMiddleware","routerMiddleware","run","Decorator","styled","main","color","decorations","shadows","default","PageWrapper","children","Container","div","Hero","acceptedStyleProps","BaseStyledType","props","Object","keys","map","key","includes","replace","toLowerCase","join","TypeWithContext","useContext","ThemeContext","typography","tag","mergedProps","Type","withComponent","Paragon","StyledCanon","Main","xs","role","aria-label","getColorObject","light","dark","background","100","90","grayscale","0","10","60","70","80","blue","50","red","columns","sm","md","lg","xl","gutterWidth","paddingWidth","container","breakpoints","toAnimate","duration","item","setDimensions","width","height","toRem","pxValue","fontFamily","Canon","fontSize","fontWeight","lineHeight","Trafalgar","DoublePica","GreatPrimer","BodyCopy","Brevier","name","tint","colors","awesomegrid","helpers","transitions","GlobalStyles","createGlobalStyle","breakpoint","StylesBootstrap","useSelector","App","path","component","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.96dc2817.chunk.js","sourcesContent":["//@ts-ignore \nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","export const theme = {\n    setMode: 'THEME_SET_MODE'\n}\n\nexport function setMode() {\n    return {\n        type: theme.setMode\n    };\n}","export const MODE_DARK = 'dark';\nexport const MODE_LIGHT = 'light';\n\nexport const userPreferredMode = () => window.matchMedia('(prefers-color-scheme: dark)').matches ? MODE_DARK : MODE_LIGHT;\n\nexport const isDarkMode = (mode: string) => mode === MODE_DARK;\n","import { theme } from '../actions/theme';\nimport {\n    userPreferredMode,\n    isDarkMode,\n    MODE_DARK,\n    MODE_LIGHT\n} from '../utils/theme';\n\nconst initialState = {\n    mode: userPreferredMode()\n};\n\n\nexport default function themeReducer(state: any, { type, data }: { type: string, data: any }) {\n    if (typeof state === 'undefined') {\n        return initialState;\n    }\n\n    switch (type) {\n        case theme.setMode:\n            return {\n                ...state,\n                mode: isDarkMode(state.mode) ? MODE_LIGHT : MODE_DARK,\n            };\n        default:\n            return state;\n    }\n}\n","import theme from './theme';\n\nexport type stateProps = {\n    theme: {\n        mode: string\n    }\n} \n\nexport default {\n    theme\n}","export default function* rootSaga() {}","\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport history from './history';\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = (state: any, action: any) => combineReducers({\n    ...reducers,\n    router: connectRouter(history),\n})(state, action);\n\nexport default createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n","import React, { FC } from 'react';\nimport { Container } from 'react-awesome-styled-grid';\nimport styled from 'styled-components';\n\nconst Decorator = styled.main`\n  background: ${({ theme }) => theme.color('background', 90)};\n  box-shadow: ${({ theme }) => theme.decorations.shadows.default};\n  margin: 4rem auto;\n  padding: 3rem 2rem;\n`;\n\nconst PageWrapper: FC = ({ children }) => (\n    <Container>\n        <Decorator>\n            {children}\n        </Decorator>\n    </Container>\n);\n\nexport default PageWrapper;","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    padding: 10rem 0 3rem;\n`;\n\nexport const Hero: FC = ({ children }) => (\n    <Container>\n            {children}\n    </Container>\n) ","import React, { FC, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport styled from 'styled-components';\n\nconst acceptedStyleProps = [\n    'fontFamily',\n    'fontSize',\n    'fontWeight',\n    'lineHeight',\n    'color'\n]\n\nconst BaseStyledType = styled.div`\n    color: ${({ theme }) => theme.color('typography', 100)};\n\n    ${props => {\n        return Object.keys(props).map(key => {\n            if (!acceptedStyleProps.includes(key)) return '';\n            //@ts-ignore\n            return `${key.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase()}: ${props[key]};`\n        }).join('');\n    }\n    }\n`;\n\nconst TypeWithContext: FC<{ type: string }> = ({ children, type, ...props }) => {\n    const { typography }: any = useContext(ThemeContext);\n\n    const {\n        tag,\n        ...mergedProps\n    }: any = {\n        ...typography[type],\n        ...props,\n    };\n\n    const Type = BaseStyledType.withComponent(tag);\n\n    return (\n        <Type {...mergedProps}\n        >\n            {children}\n        </Type>\n    );\n}\n\nexport const Canon: FC<any> = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type={'Canon'}\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const Trafalgar: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"Trafalgar\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const Paragon: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"Paragon\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const DoublePice: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"DoublePice\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const GreatPrimer: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"GreatPrimer\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const BodyCopy: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"BodyCopy\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const Brevier: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"Brevier\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\n\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col } from 'react-awesome-styled-grid';\nimport PageWrapper from '../../components/PageWrapper';\nimport { Hero } from '../../components/Hero';\nimport { Canon, Trafalgar, Paragon } from '../../components/Typography';\n\nconst StyledCanon = styled(Canon)`\n    margin-bottom: 2rem;\n\n    span {\n        position: relative;\n        animation-name: wave-animation;\n        animation-duration: 2.5s;\n        animation-iteration-count: infinite;\n        transform-origin: 70% 70%;\n        display: inline-block;\n    }\n\n    @keyframes wave-animation {\n        0% { transform: rotate(  0.0deg) }\n        10% { transform: rotate(-10.0deg) }\n        20% { transform: rotate( 12.0deg) }\n        30% { transform: rotate(-10.0deg) }\n        40% { transform: rotate(  9.0deg) }\n        50% { transform: rotate(  0.0deg) }\n        100% { transform: rotate(  0.0deg) }\n    }\n`;\n\nconst Main: FC = () => {\n    return (\n        <>\n            <Hero>\n                <Container>\n                    <Row>\n                        <Col xs={4}>\n                            <StyledCanon>\n                                Hello! Hej! Labas! <span role=\"img\" aria-label=\"Hello\">👋</span>\n                            </StyledCanon>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={3}>\n                            <Paragon>\n                                I'm Lukas — a Copenhagen based frontend engineer, currently breaking builds at Valtech.\n                            </Paragon>\n                        </Col>\n                    </Row>\n                </Container>\n            </Hero>\n            <PageWrapper>\n{/*                 <Row>\n                    <Col xs={4}>\n                        <Trafalgar>\n                            Experience\n                        </Trafalgar>\n                    </Col>  \n                </Row> */}\n            </PageWrapper>\n        </>\n    );\n};\n\nexport default Main;","const getColorObject = (light: {}, dark: {} = light) => ({ light, dark });\n\nexport default {\n    background: getColorObject(\n        {\n            100: '#F2F3F4',\n            90: '#fff'\n        },\n        {\n            100: '#252935',\n            90: '#2C3040'\n        }\n    ),\n    grayscale: getColorObject(\n        {\n            0: '#fff',\n            10: '#D6D7D7',\n            60: '#595D5F',\n            70: '#9B9E9F',\n            80: '#595D5F',\n            90: '#222222',\n            100: '#000'\n        },\n        {\n            100: '#fff',\n            90: '#D6D7D7',\n            80: '#595D5F',\n            70: '#9B9E9F',\n            60: '#595D5F',\n            10: '#222222',\n            0: '#000'\n        }\n    ),\n    typography: getColorObject(\n        {\n            100: '#2C3040'\n        },\n        {\n            100: '#fff'\n        }),\n    blue: getColorObject({\n        100: '#0D74FF',\n        50: '#D9E7FD'\n    }),\n    red: getColorObject({\n        100: '#F74237',\n        50: '#FFEBF4'\n    })\n};","export default {\n    columns: {\n        xs: 4,\n        sm: 8,\n        md: 8,\n        lg: 12,\n        xl: 12,\n    },\n    gutterWidth: {\n        xs: 1.5,\n        sm: 1.5,\n        md: 1.5,\n        lg: 1.5,\n        xl: 1.5,\n    },\n    paddingWidth: {\n        xs: 1.5,\n        sm: 1.5,\n        md: 1.5,\n        lg: 1.5,\n        xl: 1.5,\n    },\n    container: {\n        xs: 'full', // 'full' = max-width: 100%\n        sm: 'full', // 'full' = max-width: 100%\n        md: 60, // 'full' = max-width: 100%\n        lg: 60, // max-width: 1440px\n        xl: 60, // max-width: 1440px\n    },\n    breakpoints: {\n        xs: 1,\n        sm: 43, // 688px\n        md: 60, // 960px\n        lg: 90, // 1440px\n        xl: 120, // 1920px\n    },\n}","export default {\n    default: (toAnimate: Array<string>, duration: string = '.2s'): string => toAnimate.map(item => `${item} ${duration} cubic-bezier(0.25, 0.46, 0.45, 0.94)`).join(',')\n}","export default {\n    shadows: {\n        default: 'rgba(0,0,0, 0.1) 0px 2px 8px, rgba(0,0,0, 0.1) 0px 1px 3px'\n    }\n}","export const setDimensions = (width: string, height: string = width) => `\n    width: ${width};\n    height: ${height};\n`;\n\nexport const toRem = (pxValue: number): string | undefined => `${pxValue / 16}rem`;\n","import { toRem } from './helpers';\nconst fontFamily = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, 'Apple Color Emoji', Arial, sans-serif, 'Segoe UI Emoji', 'Segoe UI Symbol'\";\n\nexport default {\n    // http://www.bbc.co.uk/gel/guidelines/typography\n    Canon: {\n        tag: 'h1',\n        fontSize: toRem(52),\n        fontWeight: 800,\n        lineHeight: toRem(56),\n        fontFamily,\n    },\n    Trafalgar: {\n        tag: 'h1',\n        fontSize: toRem(36),\n        fontWeight: 600,\n        lineHeight: toRem(40),\n        fontFamily,\n    },\n    Paragon: {\n        tag: 'h2',\n        fontSize: toRem(28),\n        fontWeight: 500,\n        lineHeight: toRem(32),\n        fontFamily,\n    },\n    DoublePica: {\n        tag: 'h3',\n        fontSize: toRem(26),\n        fontWeight: 500,\n        lineHeight: toRem(30),\n        fontFamily,\n    },\n    GreatPrimer: {\n        tag: 'h4',\n        fontSize: toRem(21),\n        fontWeight: 500,\n        lineHeight: toRem(24),\n        fontFamily,\n    },\n    BodyCopy: {\n        tag: 'p',\n        fontSize: toRem(16),\n        fontWeight: 400,\n        lineHeight: toRem(22),\n        fontFamily,\n    },\n    Brevier: {\n        tag: 'p',\n        fontSize: toRem(14),\n        fontWeight: 400,\n        lineHeight: toRem(18),\n        fontFamily,\n    }\n}","export default {\n    xs: 0,\n    sm: 688,\n    md: 960,\n    lg: 1440,\n    xl: 1920\n}","import colors from './colors';\nimport awesomegrid from './grid';\nimport transitions from './transitions';\nimport decorations from './decorations';\nimport typography from './typography';\nimport breakpoints from './breakpoints';\nimport * as helpers from './helpers';\n\nexport default (mode: string = 'dark') => ({\n    //@ts-ignore\n    color: (name: string, tint: number = 100): string | undefined => colors[name][mode][tint],\n    awesomegrid,\n    helpers,\n    transitions,\n    decorations,\n    typography,\n    breakpoints\n});","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { Reset } from 'styled-reset';\n//@ts-ignore \nimport breakpoint from 'styled-components-breakpoint';\nimport theme from '../theme';\nimport { stateProps } from '../reducers';\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    font-size: 10px;\n\n    ${breakpoint('sm')`\n      font-size: 14px;\n    `}\n\n    ${breakpoint('md')`\n      font-size: 16px;\n    `}\n\n  }\n  \n  body {\n    background: ${({ theme }) => theme.color('background')};\n    display: flex;\n    min-height: 100vh;\n    flex-direction: column;\n  }\n\n  #root {\n    flex: 1;\n  }\n`;\n\nconst StylesBootstrap: FC = ({ children }) => {\n  const mode = useSelector(({ theme }: stateProps) => theme.mode);\n\n  return (\n    <ThemeProvider theme={theme(mode)}>\n      <>\n        <Reset />\n        <GlobalStyles />\n        {children}\n      </>\n    </ThemeProvider>\n  )\n};\n\nexport default StylesBootstrap;","import React, { FC } from 'react';\nimport { Route, Switch } from 'react-router';\nimport Main from './containers/Main';\nimport StylesBootstrap from './styles/bootstrap';\n\nconst App: FC = () => (\n  <StylesBootstrap>\n    <Switch>\n      <Route path=\"/\" component={Main} />\n    </Switch>\n  </StylesBootstrap>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router'\nimport history from './history';\nimport store from './store';\nimport App from './App';\n\nrender(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Route path=\"/\" component={App} />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}