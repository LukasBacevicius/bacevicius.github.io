{"version":3,"sources":["history.ts","actions/theme.ts","utils/theme.ts","reducers/theme.ts","reducers/index.ts","sagas/index.ts","store.ts","components/PageWrapper/index.tsx","components/Typography/index.tsx","components/Hero/index.tsx","components/Section/index.tsx","components/Card/index.tsx","components/Ticker/index.tsx","components/ReachOut/index.tsx","containers/Main/index.tsx","components/LightsOff/index.tsx","containers/Navigation/index.tsx","theme/colors.ts","theme/grid.ts","theme/transitions.ts","theme/decorations.ts","theme/helpers.ts","theme/typography.ts","theme/breakpoints.ts","theme/index.ts","styles/bootstrap.tsx","App.tsx","index.tsx"],"names":["history","createBrowserHistory","theme","setMode","MODE_DARK","MODE_LIGHT","isDarkMode","mode","initialState","window","matchMedia","matches","state","type","data","rootSaga","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","action","combineReducers","reducers","router","connectRouter","applyMiddleware","routerMiddleware","run","Decorator","styled","main","color","decorations","shadows","default","PageWrapper","children","acceptedStyleProps","BaseStyledType","div","props","Object","keys","map","key","includes","replace","toLowerCase","join","TypeWithContext","useContext","ThemeContext","typography","styles","tag","mergedProps","Type","withComponent","Canon","Trafalgar","Paragon","StyledContainer","Container","StyledCanon","AnimatedEmoji","span","Hero","headline","paragraphs","emoji","xs","role","aria-label","label","value","paragraph","StyledSection","Title","Row","Content","dl","Section","title","Wrapper","Card","Ticker","speed","Text","Link","a","ReachOut","href","fontSize","Main","ID","Checkbox","input","Label","transitions","LightsOff","onClick","checked","defaultChecked","id","htmlFor","arial-label","Navigation","useSelector","dispatch","useDispatch","justify","document","body","classList","add","setTimeout","remove","getColorObject","light","dark","background","100","90","grayscale","0","10","60","70","80","blue","50","red","columns","sm","md","lg","xl","gutterWidth","paddingWidth","container","breakpoints","toAnimate","duration","item","setDimensions","width","height","toRem","pxValue","fontFamily","fontWeight","lineHeight","DoublePica","GreatPrimer","BodyCopy","Brevier","name","tint","colors","awesomegrid","helpers","GlobalStyles","createGlobalStyle","breakpoint","StylesBootstrap","App","path","component","render","store","getElementById"],"mappings":"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","file":"static/js/main.4ed7b101.chunk.js","sourcesContent":["//@ts-ignore \nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","export const theme = {\n    setMode: 'THEME_SET_MODE'\n}\n\nexport function setMode() {\n    return {\n        type: theme.setMode\n    };\n}","export const MODE_DARK = 'dark';\nexport const MODE_LIGHT = 'light';\n\nexport const MODE_CHANGE_CLASS = '--theme-change';\n\nexport const userPreferredMode = () => window.matchMedia('(prefers-color-scheme: dark)').matches ? MODE_DARK : MODE_LIGHT;\n\nexport const isDarkMode = (mode: string) => mode === MODE_DARK;\n\nexport const changeMode = (action: () => any) => {\n    document.body.classList.add(MODE_CHANGE_CLASS);\n\n    action();\n\n    setTimeout(() => document.body.classList.remove(MODE_CHANGE_CLASS), 500);\n}","import { theme } from '../actions/theme';\nimport {\n    userPreferredMode,\n    isDarkMode,\n    MODE_DARK,\n    MODE_LIGHT\n} from '../utils/theme';\n\nconst initialState = {\n    mode: userPreferredMode()\n};\n\n\nexport default function themeReducer(state: any, { type, data }: { type: string, data: any }) {\n    if (typeof state === 'undefined') {\n        return initialState;\n    }\n\n    switch (type) {\n        case theme.setMode:\n            return {\n                ...state,\n                mode: isDarkMode(state.mode) ? MODE_LIGHT : MODE_DARK,\n            };\n        default:\n            return state;\n    }\n}\n","import theme from './theme';\n\nexport type stateProps = {\n    theme: {\n        mode: string\n    }\n} \n\nexport default {\n    theme\n}","export default function* rootSaga() {}","\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport history from './history';\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = (state: any, action: any) => combineReducers({\n    ...reducers,\n    router: connectRouter(history),\n})(state, action);\n\nexport default createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n","import React, { FC } from 'react';\nimport { Container } from 'react-awesome-styled-grid';\nimport styled from 'styled-components';\n\nconst Decorator = styled.main`\n  background: ${({ theme }) => theme.color('background', 90)};\n  box-shadow: ${({ theme }) => theme.decorations.shadows.default};\n  margin: 0 auto 4rem;\n  padding: 3rem 2rem;\n`;\n\nconst PageWrapper: FC = ({ children }) => (\n    <Container>\n        <Decorator>\n            {children}\n        </Decorator>\n    </Container>\n);\n\nexport default PageWrapper;","import React, { FC, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport styled from 'styled-components';\n\nconst acceptedStyleProps = [\n    'fontFamily',\n    'fontSize',\n    'fontWeight',\n    'lineHeight',\n    'color'\n]\n\nconst BaseStyledType = styled.div`\n    color: ${({ theme }) => theme.color('typography', 100)};\n\n    ${props => {\n        return Object.keys(props).map(key => {\n            if (!acceptedStyleProps.includes(key)) return '';\n            //@ts-ignore\n            return `${key.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase()}: ${props[key]};`\n        }).join('');\n    }\n    }\n`;\n\nconst TypeWithContext: FC<{ type: string }> = ({ children, type, ...props }) => {\n    const { typography: { styles: typography } }: any = useContext(ThemeContext);\n\n    const {\n        tag,\n        ...mergedProps\n    }: any = {\n        ...typography[type],\n        ...props,\n    };\n\n    const Type = BaseStyledType.withComponent(tag);\n\n    return (\n        <Type {...mergedProps}\n        >\n            {children}\n        </Type>\n    );\n}\n\nexport const Canon: FC<any> = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type={'Canon'}\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const Trafalgar: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"Trafalgar\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const Paragon: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"Paragon\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const DoublePica: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"DoublePica\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const GreatPrimer: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"GreatPrimer\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const BodyCopy: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"BodyCopy\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\nexport const Brevier: FC = ({ children, ...props }: any) => (\n    <TypeWithContext\n        type=\"Brevier\"\n        {...props}\n    >\n        {children}\n    </TypeWithContext>\n);\n\n\n","import React, { FC } from 'react';\nimport { Container, Row, Col } from 'react-awesome-styled-grid';\nimport { Canon, Paragon } from '../../components/Typography';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled(Container)`\n    padding: 4rem 0 2rem;\n`;\n\nconst StyledCanon = styled(Canon)`\n    margin-bottom: 2rem;\n`;\n\n/* \n    In a perfect world, this would be a standalone component\n*/\nconst AnimatedEmoji = styled.span`\n        position: relative;\n        animation-name: wave-animation;\n        animation-duration: 2.5s;\n        animation-iteration-count: infinite;\n        transform-origin: 70% 70%;\n        display: inline-block;\n\n        @keyframes wave-animation {\n        0% { transform: rotate(  0.0deg) }\n        10% { transform: rotate(-10.0deg) }\n        20% { transform: rotate( 12.0deg) }\n        30% { transform: rotate(-10.0deg) }\n        40% { transform: rotate(  9.0deg) }\n        50% { transform: rotate(  0.0deg) }\n        100% { transform: rotate(  0.0deg) }\n    }\n`\n\nexport const Hero: FC<{ headline: any, paragraphs: Array<string>, emoji?: { label: string, value: string } }> = ({ headline, paragraphs, emoji }) => (\n    <StyledContainer>\n        <Row>\n            <Col xs={4}>\n                <StyledCanon>\n                    {headline} \n                    &nbsp;\n                    {emoji && (\n                        <AnimatedEmoji role=\"img\" aria-label={emoji.label}>\n                            {emoji.value}\n                        </AnimatedEmoji>\n                    )}\n                </StyledCanon>\n            </Col>\n        </Row>\n        {\n            paragraphs.map(paragraph => (\n                <Row>\n                    <Col xs={3}>\n                        <Paragon>\n                            {paragraph}\n                        </Paragon>\n                    </Col>\n                </Row>\n            ))\n        }\n    </StyledContainer>\n) ","import React, { FC } from 'react';\nimport { Container, Row, Col } from 'react-awesome-styled-grid';\nimport styled from 'styled-components';\nimport { Trafalgar } from '../Typography';\n\nconst StyledSection = styled(Container)`\n`;\n\nconst Title = styled(Row)`\n    margin-bottom: 2rem;\n`;\n\nconst Content = styled.dl`\n`;\n\nexport const Section: FC<{ title: string }> = ({ title, children }) => (\n    <StyledSection>\n        <Title>\n            <Col xs={4}>\n                <Trafalgar>\n                    {title}\n                </Trafalgar>\n            </Col>\n        </Title>\n        <Content>\n            {children}\n        </Content>\n    </StyledSection>\n);","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n\n`;\n\nexport const Card: FC = () => (\n    <Wrapper>\n        {/*         <DoublePica>\n            Valtech\n        </DoublePica> */}\n\n    </Wrapper>\n);\n","import React, { FC } from 'react';\nimport ReactTicker from 'react-ticker';\n\nexport const Ticker: FC = ({ children }) => (\n    <ReactTicker speed={10}>\n        {() => (\n            children\n        )}\n    </ReactTicker>\n);","import React, { FC } from 'react';\nimport { Ticker } from '../Ticker';\nimport { Canon } from '../Typography';\nimport styled from 'styled-components';\n\nconst Text = styled(Canon)`\n    padding: 3rem 2rem;\n    margin-bottom: 2rem;\n    font-weight: bold;\n    text-transform: uppercase;\n`;\n\nconst Link = styled.a`\n    color: ${({ theme }) => theme.color('typography')}\n`;\n\nexport const ReachOut: FC<{ value: string }> = ({ value }) => (\n    <Ticker>\n        <Link href=\"mailto:lukasbacevicius@gmail.com\">\n            <Text fontSize={'2.5rem'}>\n                {value}\n            </Text>\n        </Link>\n    </Ticker>\n);","import React, { FC } from 'react';\nimport PageWrapper from '../../components/PageWrapper';\nimport { Hero } from '../../components/Hero';\nimport { Section } from '../../components/Section';\nimport { Card } from '../../components/Card';\nimport { ReachOut } from '../../components/ReachOut';\n\nconst Main: FC = () => {\nreturn (\n    <>\n        <Hero\n            headline={'Hello! Hej! Labas!'}\n            emoji={{\n                label: 'Hello',\n                value: '👋'\n            }}\n            paragraphs={[\n                `I'm Lukas — a Copenhagen based frontend engineer, currently changing stuff and seeing what happens at Valtech.`\n            ]}\n        />\n        <ReachOut value=\"Test Test! 📢\" />\n        <PageWrapper>\n            <Section title={'Experience'}>\n                <dt>\n                    <Card />\n                </dt>\n            </Section>\n        </PageWrapper>\n    </>\n);\n};\n\nexport default Main;\n\n\n/* const Main: FC = () => {\n    return (\n        <>\n            <Hero\n                headline={'Lorem ipsum dolor sit amet'}\n                emoji={{\n                    label: 'Hello',\n                    value: '👋'\n                }}\n                paragraphs={[\n                    `Consequat ac felis donec et. Suspendisse interdum consectetur libero id faucibus nisl tincidunt. Neque egestas congue quisque egestas diam.`\n                ]}\n            />\n            <ReachOut value=\"ipsum dolor! 📢\" />\n            <PageWrapper>\n                <Section title={'Experience'}>\n                    <dt>\n                        <Card />\n                    </dt>\n                </Section>\n            </PageWrapper>\n        </>\n    );\n};\n\nexport default Main;\n */","import React from 'react';\nimport styled from 'styled-components';\n\nconst ID = 'LightsOff';\n\nconst Checkbox = styled.input`\n    display: none;\n\n    &:checked + [for=\"${ID}\"] {\n        &:before {\n            transform: translateX(100%);\n        }\n    }\n`;\n\nconst Label = styled.label`\n        background: ${({ theme }) => theme.color('background', 90)};\n        position: relative;\n        border-radius: 6.25rem;\n        cursor: pointer;\n        height: 2.2rem;\n        width: 6.5rem;\n        border: .2rem solid ${({ theme }) => theme.color('background', 90)};\n        box-shadow: ${({ theme }) => theme.decorations.shadows.default};\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        user-select: none;\n        \n        &:before {\n            content: '';\n            height: 100%;\n            border-radius: inherit;\n            width: 50%;\n            position: absolute;\n            background: ${({ theme }) => theme.color('background')};\n            transition: ${({ theme }) => theme.transitions.default(['transform'])};\n            z-index: 0;\n        }\n\n        span {\n            text-align: center;\n            width: 50%;\n            z-index: 1;\n            font-size: 1.25rem;\n        }\n`;\n\nexport const LightsOff = ({ onClick, checked }: { onClick?: () => void; checked?: boolean; }) => (\n    <>\n        <Checkbox\n            type=\"checkbox\"\n            defaultChecked={checked}\n            id={ID}\n        />\n        <Label onClick={onClick} htmlFor={ID} title=\"Activate light mode\">\n            <span role=\"img\" arial-label=\"Light mode\">☀️</span>\n            <span role=\"img\" arial-label=\"Dark mode\">🌙</span>\n        </Label>\n    </>\n);","import React from 'react';\nimport { Container, Row, Col } from 'react-awesome-styled-grid';\nimport { LightsOff } from '../../components/LightsOff';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { stateProps } from '../../reducers';\nimport { isDarkMode, changeMode } from '../../utils/theme';\nimport { setMode } from '../../actions/theme';\nimport styled from 'styled-components';\n\nconst Navigation = styled(Container)`\n    height: 6rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport default () => {\n    const mode = useSelector(({ theme }: stateProps) => theme.mode);\n    const dispatch = useDispatch();\n\n    const toggleMode = () => changeMode(() => dispatch(setMode()));\n\n    return (\n        <Navigation>\n            <Row justify='flex-end'>\n                <Col xs={2} justify='flex-end'>\n                    <LightsOff\n                        checked={isDarkMode(mode)}\n                        onClick={toggleMode}\n                    />\n                </Col>\n            </Row>\n        </Navigation>\n    );\n};","const getColorObject = (light: {}, dark: {} = light) => ({ light, dark });\n\nexport default {\n    background: getColorObject(\n        {\n            100: '#F2F3F4',\n            90: '#fff'\n        },\n        {\n            100: '#252935',\n            90: '#2C3040'\n        }\n    ),\n    grayscale: getColorObject(\n        {\n            0: '#fff',\n            10: '#D6D7D7',\n            60: '#595D5F',\n            70: '#9B9E9F',\n            80: '#595D5F',\n            90: '#222222',\n            100: '#000'\n        },\n        {\n            100: '#fff',\n            90: '#D6D7D7',\n            80: '#595D5F',\n            70: '#9B9E9F',\n            60: '#595D5F',\n            10: '#222222',\n            0: '#000'\n        }\n    ),\n    typography: getColorObject(\n        {\n            100: '#2C3040'\n        },\n        {\n            100: '#fff'\n        }),\n    blue: getColorObject({\n        100: '#0D74FF',\n        50: '#D9E7FD'\n    }),\n    red: getColorObject({\n        100: '#F74237',\n        50: '#FFEBF4'\n    })\n};","export default {\n    columns: {\n        xs: 4,\n        sm: 8,\n        md: 8,\n        lg: 12,\n        xl: 12,\n    },\n    gutterWidth: {\n        xs: 1.5,\n        sm: 1.5,\n        md: 1.5,\n        lg: 1.5,\n        xl: 1.5,\n    },\n    paddingWidth: {\n        xs: 1.5,\n        sm: 1.5,\n        md: 1.5,\n        lg: 1.5,\n        xl: 1.5,\n    },\n    container: {\n        xs: 'full', // 'full' = max-width: 100%\n        sm: 'full', // 'full' = max-width: 100%\n        md: 60, // 'full' = max-width: 100%\n        lg: 60, // max-width: 1440px\n        xl: 60, // max-width: 1440px\n    },\n    breakpoints: {\n        xs: 1,\n        sm: 43, // 688px\n        md: 60, // 960px\n        lg: 90, // 1440px\n        xl: 120, // 1920px\n    },\n}","export default {\n    default: (toAnimate: Array<string> = ['all'], duration: string = '.2s'): string => toAnimate.map(item => `${item} ${duration} cubic-bezier(0.25, 0.46, 0.45, 0.94)`).join(',')\n}","export default {\n    shadows: {\n        default: 'rgba(0,0,0, 0.1) 0px 2px 8px, rgba(0,0,0, 0.1) 0px 1px 3px'\n    }\n}","export const setDimensions = (width: string, height: string = width) => `\n    width: ${width};\n    height: ${height};\n`;\n\nexport const toRem = (pxValue: number): string | undefined => `${pxValue / 16}rem`;\n","import { toRem } from './helpers';\nconst fontFamily = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, 'Apple Color Emoji', Arial, sans-serif, 'Segoe UI Emoji', 'Segoe UI Symbol'\";\n\nexport default {\n    fontFamily,\n    styles: {\n        // http://www.bbc.co.uk/gel/guidelines/typography\n        Canon: {\n            tag: 'h1',\n            fontSize: toRem(52),\n            fontWeight: 800,\n            lineHeight: toRem(56),\n            fontFamily,\n        },\n        Trafalgar: {\n            tag: 'h1',\n            fontSize: toRem(36),\n            fontWeight: 600,\n            lineHeight: toRem(40),\n            fontFamily,\n        },\n        Paragon: {\n            tag: 'h2',\n            fontSize: toRem(28),\n            fontWeight: 500,\n            lineHeight: toRem(32),\n            fontFamily,\n        },\n        DoublePica: {\n            tag: 'h3',\n            fontSize: toRem(26),\n            fontWeight: 500,\n            lineHeight: toRem(30),\n            fontFamily,\n        },\n        GreatPrimer: {\n            tag: 'h4',\n            fontSize: toRem(21),\n            fontWeight: 500,\n            lineHeight: toRem(24),\n            fontFamily,\n        },\n        BodyCopy: {\n            tag: 'p',\n            fontSize: toRem(16),\n            fontWeight: 400,\n            lineHeight: toRem(22),\n            fontFamily,\n        },\n        Brevier: {\n            tag: 'p',\n            fontSize: toRem(14),\n            fontWeight: 400,\n            lineHeight: toRem(18),\n            fontFamily,\n        }\n    }\n}","export default {\n    xs: 0,\n    sm: 688,\n    md: 960,\n    lg: 1440,\n    xl: 1920\n}","import colors from './colors';\nimport awesomegrid from './grid';\nimport transitions from './transitions';\nimport decorations from './decorations';\nimport typography from './typography';\nimport breakpoints from './breakpoints';\nimport * as helpers from './helpers';\n\nexport default (mode: string = 'dark') => ({\n    //@ts-ignore\n    color: (name: string, tint: number = 100): string | undefined => colors[name][mode][tint],\n    awesomegrid,\n    helpers,\n    transitions,\n    decorations,\n    typography,\n    breakpoints\n});","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { Reset } from 'styled-reset';\n//@ts-ignore \nimport breakpoint from 'styled-components-breakpoint';\nimport theme from '../theme';\nimport { stateProps } from '../reducers';\nimport { MODE_CHANGE_CLASS } from '../utils/theme'\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    font-family: ${({ theme }) => theme.typography.fontFamily};\n    color: ${({ theme }) => theme.color('typography')}\n    font-size: 10px;\n\n    ${breakpoint('sm')`\n      font-size: 14px;\n    `}\n\n    ${breakpoint('md')`\n      font-size: 16px;\n    `}\n\n  }\n  \n  body {\n    background: ${({ theme }) => theme.color('background')};\n    display: flex;\n    min-height: 100vh;\n    flex-direction: column;\n\n    &.${MODE_CHANGE_CLASS} {\n      transition: ${({ theme }) => theme.transitions.default()};\n    }\n  }\n\n  #root {\n    flex: 1;\n  }\n`;\n\nconst StylesBootstrap: FC = ({ children }) => {\n  const mode = useSelector(({ theme }: stateProps) => theme.mode);\n\n  return (\n    <ThemeProvider theme={theme(mode)}>\n      <>\n        <Reset />\n        <GlobalStyles />\n        {children}\n      </>\n    </ThemeProvider>\n  )\n};\n\nexport default StylesBootstrap;","import React, { FC } from 'react';\nimport { Route, Switch } from 'react-router';\nimport Main from './containers/Main';\nimport Navigation from './containers/Navigation';\nimport StylesBootstrap from './styles/bootstrap';\n\nconst App: FC = () => (\n  <StylesBootstrap>\n    <Navigation />\n    <Switch>\n      <Route path=\"/\" component={Main} />\n    </Switch>\n  </StylesBootstrap>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router'\nimport history from './history';\nimport store from './store';\nimport App from './App';\n\nrender(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Route path=\"/\" component={App} />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}