{"version":3,"sources":["history.ts","actions/theme.ts","utils/theme.ts","reducers/theme.ts","reducers/index.ts","sagas/index.ts","store.ts","theme/colors.ts","theme/index.ts","components/LightsOff/index.tsx","App.tsx","index.tsx"],"names":["history","createBrowserHistory","theme","setMode","MODE_DARK","MODE_LIGHT","isDarkMode","mode","initialState","window","matchMedia","matches","state","type","data","rootSaga","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","action","combineReducers","reducers","router","connectRouter","applyMiddleware","routerMiddleware","run","getColorObject","light","dark","background","100","90","grayscale","0","10","60","70","80","blue","50","red","colors","color","name","tint","setDimensions","width","height","ID","Checkbox","styled","input","Label","label","LightsOff","onClick","checked","defaultChecked","id","htmlFor","role","GlobalStyles","createGlobalStyle","App","useSelector","dispatch","useDispatch","path","render","store","component","document","getElementById"],"mappings":"uQAKeA,EAFCC,c,+BCHHC,EAAQ,CACjBC,QAAS,kBCDN,IAAMC,EAAY,OACZC,EAAa,QAIbC,EAAa,SAACC,GAAD,OAAkBA,IAASH,G,8NCGrD,IAAMI,EAAe,CACjBD,KDNmCE,OAAOC,WAAW,gCAAgCC,QAAUP,EAAYC,GEKhG,OACXH,MDIW,SAAsBU,EAAtB,GAAgF,IAA5CC,EAA2C,EAA3CA,KAC/C,GAD0F,EAArCC,KAChC,qBAAVF,EACP,OAAOJ,EAGX,OAAQK,GACJ,KAAKX,EAAMC,QACP,O,yWAAO,CAAP,GACOS,EADP,CAEIL,KAAMD,EAAWM,EAAML,MAAQF,EAAaD,IAEpD,QACI,OAAOQ,K,4BEzBMG,GAAV,SAAUA,IAAV,iG,8NCSf,IAAMC,EAAmBP,OAAOQ,sCAAwCC,IAElEC,EAAiBC,cAORC,eALK,SAACT,EAAYU,GAAb,OAA6BC,Y,yWAAgB,IAC1DC,EADyD,CAE5DC,OAAQC,YAAc1B,KAFuBuB,CAG9CX,EAAOU,KAINN,EAAiBW,YAAgBC,YAAiB5B,GAAUmB,KAGhEA,EAAeU,IAAId,G,oBCvBbe,EAAiB,SAACC,GAAD,IAAYC,EAAZ,uDAAuBD,EAAvB,MAAkC,CAAEA,QAAOC,SAEnD,GACXC,WAAYH,EACR,CACII,IAAK,UACLC,GAAI,QAER,CACID,IAAK,UACLC,GAAI,SAGZC,UAAWN,EACP,CACIO,EAAG,OACHC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJN,GAAI,UACJD,IAAK,QAET,CACIA,IAAK,OACLC,GAAI,UACJM,GAAI,UACJD,GAAI,UACJD,GAAI,UACJD,GAAI,UACJD,EAAG,SAGXK,KAAMZ,EAAe,CACjBI,IAAK,UACLS,GAAI,YAERC,IAAKd,EAAe,CAChBI,IAAK,UACLS,GAAI,aCrCG,aAA4B,IAA3BpC,EAA0B,uDAAX,OAC3B,MAAO,CACHsC,SAEAC,MAAO,SAACC,GAAD,IAAeC,EAAf,uDAA8B,MAA9B,OAA4DH,EAAOE,GAAMxC,GAAMyC,IACtFC,cAAe,SAACC,GAAD,IAAgBC,EAAhB,uDAAiCD,EAAjC,qCACFA,EADE,kCAEDC,EAFC,kB,uWCJvB,IAAMC,EAAK,YAELC,EAAWC,IAAOC,MAAV,IAGUH,GAIlBI,EAAQF,IAAOG,MAAV,KAQL,qBAAGvD,MAAkB+C,cAAc,WAG5BS,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAAZ,OACrB,oCACI,kBAACP,EAAD,CACIxC,KAAK,WACLgD,eAAgBD,EAChBE,GAAIV,IAER,kBAACI,EAAD,CAAOG,QAASA,EAASI,QAASX,GAC9B,0BAAMY,KAAK,OACLJ,EAAiB,eAAP,mB,qJCrB5B,IAAMK,EAAeC,YAAH,KAMA,qBAAGhE,MAAkB4C,MAAM,iBAwB9BqB,EApBC,WACd,IAAM5D,EAAO6D,aAAY,qBAAGlE,MAA8BK,QACpD8D,EAAWC,cAEjB,OACE,kBAAC,IAAD,CAAepE,MAAOA,EAAMK,IAC1B,oCACE,kBAAC0D,EAAD,MACA,kBAAC,EAAD,CACEL,QAAStD,EAAWC,GACpBoD,QAAS,kBAAMU,ET1Bd,CACHxD,KAAMX,EAAMC,aS2BZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoE,KAAK,IAAIC,OAAQ,iBAAM,U,MCxBxCA,iBACI,kBAAC,IAAD,CAAUC,MAAOA,GACb,kBAAC,IAAD,CAAiBzE,QAASA,GACtB,kBAAC,IAAD,CAAOuE,KAAK,IAAIG,UAAWP,MAGnCQ,SAASC,eAAe,W","file":"static/js/main.8955c782.chunk.js","sourcesContent":["//@ts-ignore \nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","export const theme = {\n    setMode: 'THEME_SET_MODE'\n}\n\nexport function setMode() {\n    return {\n        type: theme.setMode\n    };\n}","export const MODE_DARK = 'dark';\nexport const MODE_LIGHT = 'light';\n\nexport const userPreferredMode = () => window.matchMedia('(prefers-color-scheme: dark)').matches ? MODE_DARK : MODE_LIGHT;\n \nexport const isDarkMode = (mode: string) => mode === MODE_DARK;","import { theme } from '../actions/theme';\nimport {\n    userPreferredMode,\n    isDarkMode,\n    MODE_DARK,\n    MODE_LIGHT\n} from '../utils/theme';\n\nconst initialState = {\n    mode: userPreferredMode()\n};\n\n\nexport default function themeReducer(state: any, { type, data }: { type: string, data: any }) {\n    if (typeof state === 'undefined') {\n        return initialState;\n    }\n\n    switch (type) {\n        case theme.setMode:\n            return {\n                ...state,\n                mode: isDarkMode(state.mode) ? MODE_LIGHT : MODE_DARK,\n            };\n        default:\n            return state;\n    }\n}\n","import theme from './theme';\n\nexport type stateProps = {\n    theme: {\n        mode: string\n    }\n} \n\nexport default {\n    theme\n}","export default function* rootSaga() {}","\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport history from './history';\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = (state: any, action: any) => combineReducers({\n    ...reducers,\n    router: connectRouter(history),\n})(state, action);\n\nexport default createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n","const getColorObject = (light: {}, dark: {} = light) => ({ light, dark });\n\nexport default {\n    background: getColorObject(\n        {\n            100: '#F2F3F4',\n            90: '#fff'\n        },\n        {\n            100: '#0D0D0D',\n            90: '#222'\n        }\n    ),\n    grayscale: getColorObject(\n        {\n            0: '#fff',\n            10: '#D6D7D7',\n            60: '#595D5F',\n            70: '#9B9E9F',\n            80: '#595D5F',\n            90: '#222222',\n            100: '#000'\n        },\n        {\n            100: '#fff',\n            90: '#D6D7D7',\n            80: '#595D5F',\n            70: '#9B9E9F',\n            60: '#595D5F',\n            10: '#222222',\n            0: '#000'\n        }\n    ),\n    blue: getColorObject({\n        100: '#0D74FF',\n        50: '#D9E7FD'\n    }),\n    red: getColorObject({\n        100: '#F74237',\n        50: '#FFEBF4'\n    })\n};","import colors from './colors';\n\nexport default (mode: string = 'dark') => {\n    return {\n        colors,\n        //@ts-ignore\n        color: (name: string, tint: string = '100'): string | undefined => colors[name][mode][tint],\n        setDimensions: (width: string, height: string = width) => `\n            width: ${width};\n            height: ${height};\n        `\n    }\n};","import React from 'react';\nimport styled from 'styled-components';\n\nconst ID = 'LightsOff';\n\nconst Checkbox = styled.input`\n    display: none;\n\n    &:checked + [for=\"${ID}\"] {\n    }\n`;\n\nconst Label = styled.label`\n    user-select: none;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.2rem;\n\n    ${({ theme }) => theme.setDimensions('3rem')}\n`;\n\nexport const LightsOff = ({ onClick, checked }: { onClick?: () => void; checked?: boolean; }) => (\n    <>\n        <Checkbox\n            type=\"checkbox\"\n            defaultChecked={checked}\n            id={ID}\n        />\n        <Label onClick={onClick} htmlFor={ID}>\n            <span role=\"img\">\n                {!checked ? 'üåô' : '‚òÄÔ∏è'}\n            </span>\n        </Label>\n    </>\n);","import React, { FC } from 'react';\nimport { Route, Switch } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\nimport theme from './theme';\nimport { stateProps } from './reducers';\nimport { isDarkMode } from './utils/theme';\nimport { setMode } from './actions/theme';\nimport { LightsOff } from './components/LightsOff';\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    font-size: 16px;\n  }\n  \n  body {\n    background: ${({ theme }) => theme.color('background')};\n  }\n`;\n\nconst App: FC = () => {\n  const mode = useSelector(({ theme }: stateProps) => theme.mode);\n  const dispatch = useDispatch();\n\n  return (\n    <ThemeProvider theme={theme(mode)}>\n      <>\n        <GlobalStyles />\n        <LightsOff \n          checked={isDarkMode(mode)}\n          onClick={() => dispatch(setMode())}\n        />\n        <Switch>\n          <Route path=\"/\" render={() => ''} />\n        </Switch>\n      </>\n    </ThemeProvider>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router'\nimport history from './history';\nimport store from './store';\nimport App from './App';\nimport './stylesheets/app.scss';\n\nrender(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Route path=\"/\" component={App} />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}